# Deploy the RL agent with a Python script manually changing replicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  # namespace: rl-agent
spec:
  selector:
    matchLabels:
      app: agent
  replicas: 1
  template:
    metadata:
      labels:
        app: agent
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      # imagePullSecrets:
      # - name: gcr-json-key
      initContainers:
      - name: prometheus-check
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Checking Prometheus API..."
          if ! curl -sf http://prometheus.istio-system.svc.cluster.local:9090; then
            echo "Error: Could not reach Prometheus API"
            exit 1
          fi
      # - name: kubernetes-check
      # ! TODO
      # should I use ConfigMap? with the certificate and mount it in the curl image?
      # should I create a secret and mount this?
      containers:
      - name: server
        # image: gcr.io/master-thesis-hpa/agent:0.4.1
        image: agent:0.5
        imagePullPolicy: Never
        volumeMounts:
          - name: kubeconfig-volume # be able to access the configuration of the cluster
            mountPath: /root/.kube/
        volumeMounts:
          - name: app
            mountPath: /app
        command:
        - /bin/sh
        - -c
        - |
          python3 /app/health_check.py & \
          python3 /app/agent_learn.py \
          --deployment frontend \
          --namespace $POD_NAMESPACE \
          --cluster minikube \
          --rew_fun quadratic \
          --model A2C \
          --learn_rate 0.0007
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          requests:
            cpu: 1000m
            memory: 1024Mi
          limits:
            cpu: 1500m
            memory: 2048Mi
      volumes:
        - name: kubeconfig-volume
          secret: 
            secretName: kubeconfig
        - name: app
          hostPath:
            path: /app/microservice-demo/src/agent-local