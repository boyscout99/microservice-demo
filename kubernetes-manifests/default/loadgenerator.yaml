apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-server-default-load
spec:
  claimRef:
    name: nfs-server-claim-load
    namespace: default
  capacity:
    storage: 1T
  accessModes:
    - ReadWriteMany
  nfs:
    path: /vol1/microservice-demo/src/loadgenerator # path to the shared folder in the server
    server: 10.167.184.82
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-server-claim-load
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""
  volumeName: nfs-server-default-load
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        name: frontend-check
        image: busybox:latest
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      - name: main
        image: gcr.io/master-thesis-hpa/loadgenerator:0.4.1
        volumeMounts:
          - name: file-storage
            mountPath: /app
        # command:
        # - /bin/sh
        # - -c
        # - |
        #   python3 /app/workload_gen.py --pattern steps
        # command:
        # - /bin/sh
        # - -c
        # - |
        #   locust --host="http://${FRONTEND_ADDR}" --headless -u 2000 -r 10
        command:
        - /bin/sh
        - -c
        - |
          cd /app && 
          locust --host="http://${FRONTEND_ADDR}" --headless -f locustfile.py && 
          sleep 10
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 1500m
            memory: 1.5Gi
          limits:
            cpu: 2000m
            memory: 2Gi
      volumes:
      - name: file-storage
        persistentVolumeClaim:
          claimName: nfs-server-claim-load
