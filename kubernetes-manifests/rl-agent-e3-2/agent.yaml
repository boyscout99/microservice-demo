# Deploy the RL agent with a Python script manually changing replicas
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agent-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-role-binding
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: agent-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-server-e3-2
spec:
  claimRef:
    name: nfs-server-claim
    namespace: rl-agent-e3-2
  capacity:
    storage: 1T
  accessModes:
    - ReadWriteMany
  nfs:
    path: /vol1/microservice-demo/src/agent # path to the shared folder in the server
    server: 10.167.184.82
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-server-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: ""
  volumeName: nfs-server-e3-2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
spec:
  selector:
    matchLabels:
      app: agent
  replicas: 1
  template:
    metadata:
      labels:
        app: agent
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      imagePullSecrets:
      - name: gcr-json-key
      initContainers:
      - name: prometheus-check
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Checking Prometheus API..."
          if ! curl -sf http://prometheus.istio-system.svc.cluster.local:9090; then
            echo "Error: Could not reach Prometheus API"
            exit 1
          fi
      containers:
      - name: server
        image: gcr.io/master-thesis-hpa/agent:0.5
        volumeMounts:
          - name: file-storage
            mountPath: /app
        command:
        - /bin/sh
        - -c
        - |
          python3 /app/health_check.py & \
          python3 /app/agent_learn.py \
          --deployment frontend \
          --namespace $POD_NAMESPACE \
          --cluster gke \
          --rew_fun quadratic \
          --model A2C \
          --learn_rate 0.0014
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          requests:
            cpu: 500m
            memory: 1024Mi
          limits:
            cpu: 1500m
            memory: 2048Mi
      volumes:
        - name: file-storage
          persistentVolumeClaim:
            claimName: nfs-server-claim
